import { NextResponse, NextRequest } from 'next/server'; import { prisma } from '@/lib/prisma'; import { getSession } from '@/lib/session'; export async function GET(){ const s=await getSession(); if(!s.user) return new NextResponse('Unauthorized',{status:401}); const items=await prisma.invoice.findMany({ where:{ userId:s.user.id }, include:{ contact:true }, orderBy:{ issueDate:'desc' } }); return NextResponse.json({ items }); } export async function POST(req:NextRequest){ const s=await getSession(); if(!s.user) return new NextResponse('Unauthorized',{status:401}); const b=await req.json(); const item=await prisma.invoice.create({ data:{ userId:s.user.id, contactId:b.contactId, categoryId:b.categoryId??null, issueDate:new Date(b.issueDate), dueDate:b.dueDate?new Date(b.dueDate):null, number:b.number, currency:b.currency||'USD', subtotal:Number(b.subtotal||0), tax:Number(b.tax||0), total:Number(b.total||0), status:b.status||'DRAFT', notes:b.notes??null } }); return NextResponse.json(item,{status:201}); }