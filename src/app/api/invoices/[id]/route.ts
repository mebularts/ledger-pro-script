import { NextRequest, NextResponse } from 'next/server'; import { prisma } from '@/lib/prisma'; import { getSession } from '@/lib/session'; export async function PUT(req:NextRequest,{params}:{params:{id:string}}){ const s=await getSession(); if(!s.user) return new NextResponse('Unauthorized',{status:401}); const b=await req.json(); const item=await prisma.invoice.update({ where:{ id:Number(params.id) }, data:{ contactId:b.contactId, categoryId:b.categoryId??null, issueDate:new Date(b.issueDate), dueDate:b.dueDate?new Date(b.dueDate):null, number:b.number, currency:b.currency, subtotal:Number(b.subtotal||0), tax:Number(b.tax||0), total:Number(b.total||0), status:b.status, notes:b.notes??null } }); return NextResponse.json(item); } export async function DELETE(_req:NextRequest,{params}:{params:{id:string}}){ const s=await getSession(); if(!s.user) return new NextResponse('Unauthorized',{status:401}); await prisma.invoice.delete({ where:{ id:Number(params.id) } }); return new NextResponse(null,{status:204}); }