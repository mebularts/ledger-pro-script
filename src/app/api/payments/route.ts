import { NextResponse, NextRequest } from 'next/server'; import { prisma } from '@/lib/prisma'; import { getSession } from '@/lib/session'; export async function GET(){ const s=await getSession(); if(!s.user) return new NextResponse('Unauthorized',{status:401}); const items=await prisma.payment.findMany({ where:{ userId:s.user.id }, include:{ contact:true, invoice:true, account:true }, orderBy:{ date:'desc' } }); return NextResponse.json({ items }); } export async function POST(req:NextRequest){ const s=await getSession(); if(!s.user) return new NextResponse('Unauthorized',{status:401}); const b=await req.json(); const item=await prisma.payment.create({ data:{ userId:s.user.id, contactId:b.contactId??null, invoiceId:b.invoiceId??null, accountId:b.accountId, date:new Date(b.date), amount:Number(b.amount||0), currency:b.currency||'USD', type:b.type, notes:b.notes??null } }); return NextResponse.json(item,{status:201}); }